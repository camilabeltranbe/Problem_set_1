rm(list = ls()) #se borra la memoria
require(pacman)
p_load(rio, # import/export data
tidyverse, # tidy-data (ggplot y Tidyverse
skimr, # summary data
visdat, ## visualizing missing data
corrplot, ## Correlation Plots
stargazer, # tables/output to TEX.
rvest,## web-scraping
writexl) ## Exportar Excel
setwd(paste0(wd,"/stores")) #se establace la ruta para guardar los resultados
setwd("/Users/aleja/Documents/MaestriÃÅa Uniandes/Clases/Big Data y Machine Learning/Repositorios Git Hub/Problem_set_1/stores")
## URL de las 10 paginas
url <- paste0("https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_",1:10,".html") #crea una lista de todas las URL
data <- as.data.frame(NULL) #crea un data vacio en donde se ira agregando cada tabla de las URL
## Union 10 bases
for (i in 1:length(url)){ #hace un loop para leer cada una de las url (data chunk) y unirlas en una tabla
my_html <- read_html(url[i])
tabla <- my_html %>%
html_table()
tabla <- as.data.frame(tabla)
data <- rbind(data, tabla)
}
rm(list = (c("tabla","my_html","i","url","wd"))) #se borran los elementos que no quiero guardar
save.image("data_GEIH.RData") #guardar los datos en .RData para que cargarlos sea mas sencillo
write_xlsx(data, "data_GEIH.xlsx")
## Cambio de formato a Tibble
data_tibble <- as_tibble(data)
head(data_tibble)
view(head(data_tibble))
## Primer vistazo
skim(data_tibble) %>%
head()
## Seleccion de variables con las cuales vamos a trabjar -(si no sirve, hacer con dataframe)
data_tibble<- data_tibble %>%
select(directorio, secuencia_p, orden, estrato1, sex, age, ocu, oficio, orden, totalHoursWorked,
dsi, ie , formal, informal, sizeFirm , regSalud, maxEducLevel, ingtot,
ingtotes,ingtotob, y_salary_m, y_total_m)
view(head(data_tibble))
prueba <- data %>% group_by(y_salary_m) %>% summarise(n())
View(prueba)
rm(prueba)
data_tibble_miss <- skim(data_tibble) %>%
select(skim_variable, n_missing)
Nobs= nrow(data_tibble)
Nobs
data_miss<- data_miss %>%
mutate(p_missing= n_missing/Nobs)
data_miss<- data_tibble_miss %>%
mutate(p_missing= n_missing/Nobs)
head(db_miss)
head(data_miss)
view(head(data_miss))
vis_miss(data_tibble)
class(data_tibble)
des_vars= c("var_1", "var_2", "age")
stargazer(df[des_vars], type="text")
## box_plot: edad vs salario
box_plot <- ggplot(data=data_frame , mapping = aes(as.factor(edad) , salario)) +
geom_boxplot()
## Pasar los datos a dataframe
data_frame <- as_tibble(data_tibble)
## box_plot: edad vs salario
box_plot <- ggplot(data=data_frame , mapping = aes(as.factor(edad) , salario)) +
geom_boxplot()
box_plot
## box_plot: edad vs salario
box_plot <- ggplot(data=data_frame , mapping = aes(as.factor(age) , y_salary_m)) +
geom_boxplot()
box_plot
## add another geometry 1
box_plot <- box_plot +
geom_point(aes(colour=as.factor(sex))) +
scale_color_manual(values = c("0"="red" , "1"="blue") , label = c("0"="Hombre" , "1"="Mujer") , name = "Sexo")
box_plot
## add another geometry 2
box_plot <- box_plot +
geom_point(aes(colour=as.factor(ocupacion))) +
scale_color_manual(values = c("0"="red" , "1"="blue") , label = c("0"="Hombre" , "1"="Mujer") , name = "Sexo")
## box_plot: edad vs salario
box_plot <- ggplot(data=data_frame , mapping = aes(as.factor(age) , y_salary_m)) +
geom_boxplot()
box_plot
## add another geometry 1
box_plot <- box_plot +
geom_point(aes(colour=as.factor(sex))) +
scale_color_manual(values = c("0"="red" , "1"="blue") , label = c("0"="Hombre" , "1"="Mujer") , name = "Sexo")
box_plot
## add another geometry 2
box_plot <- box_plot +
geom_point(aes(colour=as.factor(ocu))) +
scale_color_manual(values = c("0"="purple" , "1"="green") , label = c("0"="Desempleado" , "1"="Empleado") , name = "Sexo")
box_plot
## add another geometry 2
box_plot <- box_plot +
geom_point(aes(colour=as.factor(ocu))) +
scale_color_manual(values = c("0"="purple" , "1"="gray") , label = c("0"="Desempleado" , "1"="Empleado") , name = "Sexo")
box_plot
